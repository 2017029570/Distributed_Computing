[31m2020-12-18 23:00:52.767 PST [comm.tls] ClientHandshake -> ERRO 001[0m Client TLS handshake failed after 199.118212ms with error: x509: certificate is valid for peer0.org1.example.com, peer0, not localhost remoteaddress=127.0.0.1:7051
[31m2020-12-18 23:00:53.804 PST [comm.tls] ClientHandshake -> ERRO 002[0m Client TLS handshake failed after 20.897562ms with error: x509: certificate is valid for peer0.org1.example.com, peer0, not localhost remoteaddress=127.0.0.1:7051
[31m2020-12-18 23:00:55.461 PST [comm.tls] ClientHandshake -> ERRO 003[0m Client TLS handshake failed after 27.770178ms with error: x509: certificate is valid for peer0.org1.example.com, peer0, not localhost remoteaddress=127.0.0.1:7051
Error: failed to retrieve endorser client for install: endorser client failed to connect to localhost:7051: failed to create new connection: context deadline exceeded
Usage:
  peer lifecycle chaincode install [flags]

Flags:
      --connectionProfile string       The fully qualified path to the connection profile that provides the necessary connection information for the network. Note: currently only supported for providing peer connection information
  -h, --help                           help for install
      --peerAddresses stringArray      The addresses of the peers to connect to
      --targetPeer string              When using a connection profile, the name of the peer to target for this action
      --tlsRootCertFiles stringArray   If TLS is enabled, the paths to the TLS root cert files of the peers to connect to. The order and number of certs specified should match the --peerAddresses flag

Global Flags:
      --cafile string                       Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
      --certfile string                     Path to file containing PEM-encoded X509 public key to use for mutual TLS communication with the orderer endpoint
      --clientauth                          Use mutual TLS when communicating with the orderer endpoint
      --connTimeout duration                Timeout for client to connect (default 3s)
      --keyfile string                      Path to file containing PEM-encoded private key to use for mutual TLS communication with the orderer endpoint
  -o, --orderer string                      Ordering service endpoint
      --ordererTLSHostnameOverride string   The hostname override to use when validating the TLS connection to the orderer
      --tls                                 Use TLS when communicating with the orderer endpoint
      --tlsHandshakeTimeShift duration      The amount of time to shift backwards for certificate expiration checks during TLS handshakes with the orderer endpoint

